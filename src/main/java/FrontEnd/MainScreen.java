/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FrontEnd;

import Backend.Exercise;
import Backend.ExerciseManager;
import Backend.ExerciseWithSet;
import Backend.Routine;
import Backend.RoutineManager;
import Backend.Session;
import Backend.SessionManager;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.SpinnerDateModel;

/**
 *
 * @author Ryang
 */
public class MainScreen extends javax.swing.JFrame
{

    /*
    Basic function of program:
     - build your own routine
     - save session results after completing a routine in real life in the gym
     - show progress timeline 
    
    Possible additions:
      - in timeline, sort by sessions where the user completed all the reps and sets (so where completed reps and sets >= sets and reps in routine)
     */
    private int currentLoggedIn;
    ExerciseManager em = new ExerciseManager();
    RoutineManager rm = new RoutineManager();
    SessionManager sm = new SessionManager();
    //could be ArrayList to make it easier to populate list, but size must be controlled
    ExerciseWithSet[] currentExercises = new ExerciseWithSet[5];
    int currentExercisesSize = 0;

    /**
     * Creates new form MainScreen
     *
     * @param currentLoggedIn
     */
    public MainScreen(int currentLoggedIn)
    {
        this.currentLoggedIn = currentLoggedIn;
        //main screen parameter, userID
        initComponents();
        rm.updateArray(currentLoggedIn);
        sm.updateArray(currentLoggedIn);
        //fill in data based on user
        //if musclegroup is upper, populate to upperlist
        //if musclegroup is core, populate to corelist
        //if musclegroup is lower, populate to lowerlist

        ArrayList<Exercise> e = em.getExercises();

        for (Exercise l : e)
        {
            switch (l.getMuscleGroup())
            {
                case "upper":
                {
                    DefaultListModel model = new DefaultListModel();
                    model.addAll(em.getUpperNames());
                    upperBodyList.setModel(model);
                    break;
                }
                case "core":
                {
                    DefaultListModel model = new DefaultListModel();
                    model.addAll(em.getCoreNames());
                    coreList.setModel(model);
                    break;
                }
                case "lower":
                {
                    DefaultListModel model = new DefaultListModel();
                    model.addAll(em.getLowerNames());
                    lowerList.setModel(model);
                    break;
                }
                default:
                    break;
            }
        }
        updateRoutineSelector();
        updateTimelineList(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel4 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        mainTab = new javax.swing.JTabbedPane();
        sessionTab = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        sessionExerciseList = new javax.swing.JList<>();
        routineSelector = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        dateSpinner = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        setsSpinner = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        repsSpinner = new javax.swing.JSpinner();
        saveSessionButton = new javax.swing.JButton();
        exploreTab = new javax.swing.JPanel();
        exercisesTab = new javax.swing.JTabbedPane();
        upperBodyPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        upperBodyList = new javax.swing.JList<>();
        upperAddButton = new javax.swing.JButton();
        exerciseLabel = new javax.swing.JLabel();
        upperRepSpinner = new javax.swing.JSpinner();
        upperSetSpinner = new javax.swing.JSpinner();
        RepLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        corePanel = new javax.swing.JPanel();
        coreScrollPane = new javax.swing.JScrollPane();
        coreList = new javax.swing.JList<>();
        coreAddButton = new javax.swing.JButton();
        CoreExerciseLabel = new javax.swing.JLabel();
        coreRepSpinner = new javax.swing.JSpinner();
        coreSetSpinner = new javax.swing.JSpinner();
        coreRepLabel = new javax.swing.JLabel();
        coreSetsLabel = new javax.swing.JLabel();
        lowerBodyPanel = new javax.swing.JPanel();
        lowerScrollPane = new javax.swing.JScrollPane();
        lowerList = new javax.swing.JList<>();
        lowerAddButton = new javax.swing.JButton();
        lowerExerciseLabel = new javax.swing.JLabel();
        lowerRepSpinner = new javax.swing.JSpinner();
        lowerSetSpinner = new javax.swing.JSpinner();
        lowerRepsLabel = new javax.swing.JLabel();
        lowerSetsLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        routineListScrollPane = new javax.swing.JScrollPane();
        routineList = new javax.swing.JList<>();
        routineLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        nameOfRoutineTextField = new javax.swing.JTextField();
        removeButton = new javax.swing.JButton();
        timelineTab = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        timelineList = new javax.swing.JList<>();
        sortAlphabeticallyButton = new javax.swing.JButton();
        sortByLabek = new javax.swing.JLabel();
        sortDateButton = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        setsAndRepsList = new javax.swing.JList<>();
        logoIconLabel = new javax.swing.JLabel();
        logLabel = new javax.swing.JLabel();

        jList1.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 551, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 340, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainTab.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                mainTabStateChanged(evt);
            }
        });

        sessionExerciseList.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        sessionExerciseList.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                sessionExerciseListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(sessionExerciseList);

        routineSelector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        routineSelector.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                routineSelectorItemStateChanged(evt);
            }
        });
        routineSelector.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                routineSelectorActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Futura-Bold", 0, 18)); // NOI18N
        jLabel2.setText("My Routines");

        jLabel11.setForeground(new java.awt.Color(153, 153, 153));
        jLabel11.setText("Select a routine ");

        jLabel12.setForeground(new java.awt.Color(153, 153, 153));
        jLabel12.setText("<html>Select the exercise you    would like to record");

        jLabel13.setForeground(new java.awt.Color(153, 153, 153));
        jLabel13.setText("Record your session results");

        jLabel14.setFont(new java.awt.Font("Futura-Bold", 0, 18)); // NOI18N
        jLabel14.setText("Exercises");

        jLabel15.setFont(new java.awt.Font("Futura-Bold", 0, 18)); // NOI18N
        jLabel15.setText("Record Session");

        dateLabel.setText("Date:");

        dateSpinner.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.MONTH));

        jLabel3.setText("Sets");

        setsSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        setsSpinner.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                setsSpinnerStateChanged(evt);
            }
        });

        jLabel6.setText("Reps");

        repsSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        repsSpinner.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                repsSpinnerStateChanged(evt);
            }
        });

        saveSessionButton.setText("save session");
        saveSessionButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveSessionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel2))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(jLabel14))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(routineSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(repsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addComponent(saveSessionButton))
                    .addComponent(dateLabel)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel13)
                        .addComponent(jLabel15))
                    .addComponent(dateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(setsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(routineSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(setsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(repsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saveSessionButton))
                        .addGap(98, 98, 98))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83))))
        );

        javax.swing.GroupLayout sessionTabLayout = new javax.swing.GroupLayout(sessionTab);
        sessionTab.setLayout(sessionTabLayout);
        sessionTabLayout.setHorizontalGroup(
            sessionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        sessionTabLayout.setVerticalGroup(
            sessionTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sessionTabLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 16, Short.MAX_VALUE))
        );

        mainTab.addTab("Session", sessionTab);

        exercisesTab.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        upperBodyList.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(upperBodyList);

        upperAddButton.setText("add");
        upperAddButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                upperAddButtonActionPerformed(evt);
            }
        });

        exerciseLabel.setText("Exercises");

        upperRepSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        upperSetSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        RepLabel.setText("Reps");

        jLabel7.setText("Sets");

        javax.swing.GroupLayout upperBodyPanelLayout = new javax.swing.GroupLayout(upperBodyPanel);
        upperBodyPanel.setLayout(upperBodyPanelLayout);
        upperBodyPanelLayout.setHorizontalGroup(
            upperBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upperBodyPanelLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(upperBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, upperBodyPanelLayout.createSequentialGroup()
                        .addComponent(upperAddButton)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, upperBodyPanelLayout.createSequentialGroup()
                        .addComponent(RepLabel)
                        .addGap(18, 18, 18)
                        .addComponent(upperRepSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, upperBodyPanelLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(upperSetSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, upperBodyPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, upperBodyPanelLayout.createSequentialGroup()
                        .addComponent(exerciseLabel)
                        .addGap(90, 90, 90))))
        );
        upperBodyPanelLayout.setVerticalGroup(
            upperBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, upperBodyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exerciseLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(upperBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(upperRepSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RepLabel))
                .addGap(18, 18, 18)
                .addGroup(upperBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(upperSetSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addComponent(upperAddButton)
                .addGap(55, 55, 55))
        );

        exercisesTab.addTab("Upper Body", upperBodyPanel);

        coreList.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "          ", "          ", "          ", "          " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        coreScrollPane.setViewportView(coreList);

        coreAddButton.setText("add");
        coreAddButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                coreAddButtonActionPerformed(evt);
            }
        });

        CoreExerciseLabel.setText("Exercises");

        coreRepSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        coreSetSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        coreRepLabel.setText("Reps");

        coreSetsLabel.setText("Sets");

        javax.swing.GroupLayout corePanelLayout = new javax.swing.GroupLayout(corePanel);
        corePanel.setLayout(corePanelLayout);
        corePanelLayout.setHorizontalGroup(
            corePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(corePanelLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(corePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(coreScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, corePanelLayout.createSequentialGroup()
                        .addComponent(coreRepLabel)
                        .addGap(18, 18, 18)
                        .addComponent(coreRepSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, corePanelLayout.createSequentialGroup()
                        .addComponent(coreSetsLabel)
                        .addGap(18, 18, 18)
                        .addComponent(coreSetSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(coreAddButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(corePanelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(CoreExerciseLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        corePanelLayout.setVerticalGroup(
            corePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, corePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CoreExerciseLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(coreScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(corePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coreRepSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coreRepLabel))
                .addGap(18, 18, 18)
                .addGroup(corePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coreSetSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coreSetsLabel))
                .addGap(18, 18, 18)
                .addComponent(coreAddButton)
                .addGap(55, 55, 55))
        );

        exercisesTab.addTab("Core", corePanel);

        lowerList.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "             ", "             ", "             ", "             ", "             " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lowerScrollPane.setViewportView(lowerList);

        lowerAddButton.setText("add");
        lowerAddButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                lowerAddButtonActionPerformed(evt);
            }
        });

        lowerExerciseLabel.setText("Exercises");

        lowerRepSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        lowerRepsLabel.setText("Reps");

        lowerSetsLabel.setText("Sets");

        javax.swing.GroupLayout lowerBodyPanelLayout = new javax.swing.GroupLayout(lowerBodyPanel);
        lowerBodyPanel.setLayout(lowerBodyPanelLayout);
        lowerBodyPanelLayout.setHorizontalGroup(
            lowerBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lowerBodyPanelLayout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(lowerBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lowerScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lowerBodyPanelLayout.createSequentialGroup()
                        .addComponent(lowerRepsLabel)
                        .addGap(18, 18, 18)
                        .addComponent(lowerRepSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lowerBodyPanelLayout.createSequentialGroup()
                        .addComponent(lowerSetsLabel)
                        .addGap(18, 18, 18)
                        .addComponent(lowerSetSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lowerAddButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(lowerBodyPanelLayout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(lowerExerciseLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        lowerBodyPanelLayout.setVerticalGroup(
            lowerBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lowerBodyPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lowerExerciseLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lowerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(lowerBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lowerRepSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lowerRepsLabel))
                .addGap(18, 18, 18)
                .addGroup(lowerBodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lowerSetSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lowerSetsLabel))
                .addGap(18, 18, 18)
                .addComponent(lowerAddButton)
                .addGap(55, 55, 55))
        );

        exercisesTab.addTab("Lower Body", lowerBodyPanel);

        saveButton.setText("save");
        saveButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveButtonActionPerformed(evt);
            }
        });

        routineList.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "          ", "          ", "          ", "          ", "          " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        routineListScrollPane.setViewportView(routineList);

        routineLabel.setText("Routine");

        nameLabel.setText("Name your Routine");

        removeButton.setText("remove");
        removeButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                removeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout exploreTabLayout = new javax.swing.GroupLayout(exploreTab);
        exploreTab.setLayout(exploreTabLayout);
        exploreTabLayout.setHorizontalGroup(
            exploreTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exploreTabLayout.createSequentialGroup()
                .addComponent(exercisesTab, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(exploreTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(exploreTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(exploreTabLayout.createSequentialGroup()
                            .addGap(150, 150, 150)
                            .addComponent(saveButton))
                        .addGroup(exploreTabLayout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addGroup(exploreTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(nameOfRoutineTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nameLabel)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exploreTabLayout.createSequentialGroup()
                            .addGap(136, 136, 136)
                            .addComponent(removeButton)))
                    .addGroup(exploreTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(routineListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(exploreTabLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(routineLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        exploreTabLayout.setVerticalGroup(
            exploreTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exploreTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(exploreTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(exploreTabLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(routineLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(routineListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(removeButton)
                        .addGap(34, 34, 34)
                        .addComponent(nameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nameOfRoutineTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton)
                        .addGap(22, 22, 22))
                    .addComponent(exercisesTab))
                .addContainerGap())
        );

        mainTab.addTab("Build a Routine", exploreTab);

        timelineList.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "          ", "          ", "          ", "          ", "          " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        timelineList.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                timelineListMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(timelineList);

        sortAlphabeticallyButton.setText("Alphabetically");
        sortAlphabeticallyButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                sortAlphabeticallyButtonActionPerformed(evt);
            }
        });

        sortByLabek.setText("Sort by:");

        sortDateButton.setText("Date");
        sortDateButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                sortDateButtonActionPerformed(evt);
            }
        });

        setsAndRepsList.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "          ", "          ", "          ", "          ", "          " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane8.setViewportView(setsAndRepsList);

        javax.swing.GroupLayout timelineTabLayout = new javax.swing.GroupLayout(timelineTab);
        timelineTab.setLayout(timelineTabLayout);
        timelineTabLayout.setHorizontalGroup(
            timelineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timelineTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(timelineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sortAlphabeticallyButton)
                    .addComponent(sortByLabek)
                    .addComponent(sortDateButton))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        timelineTabLayout.setVerticalGroup(
            timelineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timelineTabLayout.createSequentialGroup()
                .addGroup(timelineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(timelineTabLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(sortByLabek)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sortAlphabeticallyButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sortDateButton))
                    .addGroup(timelineTabLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(timelineTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(jScrollPane8))))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        mainTab.addTab("Timeline", timelineTab);

        logoIconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logo.png"))); // NOI18N

        logLabel.setFont(new java.awt.Font("Futura Condensed Extra", 0, 14)); // NOI18N
        logLabel.setText("GET DAK™");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainTab)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(logoIconLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(logLabel)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTab, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(logoIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addExerciseToList(String category)
    {
        if (currentExercisesSize < 5)
        {
            Exercise e = new Exercise();
            int sets = 0;
            int reps = 0;
            switch (category)
            {
                case "upper":
                {
                    int index = upperBodyList.getSelectedIndex();
                    if (index < 0)
                    {
                        return;
                    }
                    e = em.getUpperExercise(index);
                    sets = (int) upperSetSpinner.getValue();
                    reps = (int) upperRepSpinner.getValue();
                    break;
                }
                case "core":
                {
                    int index = coreList.getSelectedIndex();
                    if (index < 0)
                    {
                        return;
                    }
                    e = em.getCoreExercise(index);
                    sets = (int) coreSetSpinner.getValue();
                    reps = (int) coreRepSpinner.getValue();
                    break;
                }
                case "lower":
                {
                    int index = lowerList.getSelectedIndex();
                    if (index < 0)
                    {
                        return;
                    }
                    e = em.getLowerExercise(index);
                    sets = (int) lowerSetSpinner.getValue();
                    reps = (int) lowerRepSpinner.getValue();
                    break;
                }
            }

            currentExercises[currentExercisesSize] = new ExerciseWithSet(sets, reps, e.getId(), e.getName(), e.getMuscleGroup(), e.getDifficulty(), e.getDesc());
            currentExercisesSize++;
            updateExerciseRoutineList();
        }
    }

    private void updateExerciseRoutineList()
    {
        ArrayList<String> ews = new ArrayList<>();
        for (int i = 0; i < currentExercisesSize; i++)
        {
            ews.add(currentExercises[i].toString());
        }

        DefaultListModel m = new DefaultListModel();
        m.addAll(ews);
        routineList.setModel(m);
    }

    private void upperAddButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_upperAddButtonActionPerformed
    {//GEN-HEADEREND:event_upperAddButtonActionPerformed
        // TODO add your handling code here:
        addExerciseToList("upper");
    }//GEN-LAST:event_upperAddButtonActionPerformed

    private void lowerAddButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_lowerAddButtonActionPerformed
    {//GEN-HEADEREND:event_lowerAddButtonActionPerformed
        // TODO add your handling code here:
        addExerciseToList("lower");
    }//GEN-LAST:event_lowerAddButtonActionPerformed

    //there are TWO Date things. one is for sql and one is for java - wouldn't let me use util one when updating date spinner values ._.
    private void saveSessionButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveSessionButtonActionPerformed
    {//GEN-HEADEREND:event_saveSessionButtonActionPerformed
        int routineID = em.updateCompletedSetsReps();
        Date d = ((SpinnerDateModel) dateSpinner.getModel()).getDate(); // java.util.Date 
        java.sql.Date date = new java.sql.Date(d.getTime());
        sm.addNewSession(routineID, currentLoggedIn, date);
        updateTimelineList(false);

    }//GEN-LAST:event_saveSessionButtonActionPerformed

    private void coreAddButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_coreAddButtonActionPerformed
    {//GEN-HEADEREND:event_coreAddButtonActionPerformed
        // TODO add your handling code here:
        addExerciseToList("core");
    }//GEN-LAST:event_coreAddButtonActionPerformed

    private void routineSelectorActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_routineSelectorActionPerformed
    {//GEN-HEADEREND:event_routineSelectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_routineSelectorActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_removeButtonActionPerformed
    {//GEN-HEADEREND:event_removeButtonActionPerformed
        // TODO add your handling code here:
        if (currentExercisesSize > 0)
        {
            int index = routineList.getSelectedIndex();
            if (index >= 0)
            {
                for (int i = index; i < currentExercisesSize; i++)
                {
                    currentExercises[i] = currentExercises[i + 1];
                }
                currentExercises[currentExercisesSize] = null;
                currentExercisesSize--;
                updateExerciseRoutineList();
            }
        }

    }//GEN-LAST:event_removeButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveButtonActionPerformed
    {//GEN-HEADEREND:event_saveButtonActionPerformed
        // TODO add your handling code here:
        String routineName = nameOfRoutineTextField.getText();
        if (!routineName.isEmpty())
        {
            ArrayList<ExerciseWithSet> newExercises = rm.createNewRoutine(nameOfRoutineTextField.getText(), currentExercises, currentExercisesSize, currentLoggedIn);
            em.addToUserExercises(newExercises);
            updateRoutineSelector();
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void updateRoutineSelector()
    {
        ArrayList<String> rn = rm.getRoutineNameList();
        DefaultComboBoxModel cb = new DefaultComboBoxModel<>(rn.toArray(new String[0]));
        routineSelector.setModel(cb);

        updateSessionExercises();
    }

    private void updateSessionExercises()
    {
        int index = routineSelector.getSelectedIndex();
        Routine selectedRoutine = rm.getRoutineByIndex(index);
        ArrayList<ExerciseWithSet> routineExercises = em.getExercisesByRoutineID(selectedRoutine.getRoutineID());
        ArrayList<String> exerciseNames = rm.getExerciseNames(routineExercises);

        ArrayList<String> ews = new ArrayList<>();
        for (int i = 0; i < exerciseNames.size(); i++)
        {
            ews.add(exerciseNames.get(i));
        }

        DefaultListModel m = new DefaultListModel();
        m.addAll(ews);
        sessionExerciseList.setModel(m);
    }


    private void mainTabStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mainTabStateChanged

    }//GEN-LAST:event_mainTabStateChanged

    private void routineSelectorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_routineSelectorItemStateChanged
        if ((evt.getStateChange() == ItemEvent.SELECTED))
        {
            updateSessionExercises();
        }
    }//GEN-LAST:event_routineSelectorItemStateChanged

    private void sessionExerciseListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sessionExerciseListMouseClicked
        int index = sessionExerciseList.getSelectedIndex();
        if (index >= 0)
        {
            ExerciseWithSet selectedExercise = em.getVisibleExercise(index);
            setsSpinner.setValue(selectedExercise.getCompletedSets());
            repsSpinner.setValue(selectedExercise.getCompletedReps());
        }
    }//GEN-LAST:event_sessionExerciseListMouseClicked

    private void setsSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_setsSpinnerStateChanged
        int index = sessionExerciseList.getSelectedIndex();
        if (index >= 0)
        {
            ExerciseWithSet selectedExercise = em.getVisibleExercise(index);
            selectedExercise.setCompletedSets((int) setsSpinner.getValue());
        }

    }//GEN-LAST:event_setsSpinnerStateChanged

    private void repsSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_repsSpinnerStateChanged
        int index = sessionExerciseList.getSelectedIndex();
        if (index >= 0)
        {
            ExerciseWithSet selectedExercise = em.getVisibleExercise(index);
            selectedExercise.setCompletedReps((int) repsSpinner.getValue());
        }

    }//GEN-LAST:event_repsSpinnerStateChanged

    private void timelineListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timelineListMouseClicked
        updateSetsAndRepsList(false);
    }//GEN-LAST:event_timelineListMouseClicked

    private void sortAlphabeticallyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortAlphabeticallyButtonActionPerformed
        updateSetsAndRepsList(true);
    }//GEN-LAST:event_sortAlphabeticallyButtonActionPerformed

    private void sortDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortDateButtonActionPerformed
        updateTimelineList(true);
    }//GEN-LAST:event_sortDateButtonActionPerformed

    private void updateTimelineList(boolean sort)
    {
        
        ArrayList<String> sn = sm.getSessionNames();
        
        if (sort)
        {
            //has to be done sir xD
            Collections.sort(sn);
        }

        DefaultListModel m = new DefaultListModel();
        m.addAll(sn);
        timelineList.setModel(m);

        updateSetsAndRepsList(false);
    }

    private void updateSetsAndRepsList(boolean sort)
    {
        int index = timelineList.getSelectedIndex();
        if (index >= 0)
        {
            Session selectedSession = sm.getSessionByIndex(index);
            ArrayList<ExerciseWithSet> routineExercises = em.getExercisesByRoutineID(selectedSession.getRoutineID());
            ArrayList<String> exerciseNames = rm.getSessionExerciseNames(routineExercises);
            int exerciseNamesSize = 0; //for bubble sort to be coded in future, idk how to sort an arraylist with 1st principles sir :T

            if (sort)
            {
                Collections.sort(exerciseNames);
                //bubble sort
                /*
                for (int currentIndex = exerciseNamesSize - 1; currentIndex >= 0; currentIndex--)
                {
                    for (int i = 0; i < currentIndex; i++)
                    {
                        if ([i] > arr[i + 1])
                        {
                            String temp = exerciseNames[i];
                            arr[i] = arr[i + 1];
                            arr[i + 1] = temp;
                        }

                    }

                }
                */
            }

            ArrayList<String> ews = new ArrayList<>();
            for (int i = 0; i < exerciseNames.size(); i++)
            {
                ews.add(exerciseNames.get(i));
            }

            DefaultListModel m = new DefaultListModel();
            m.addAll(ews);
            setsAndRepsList.setModel(m);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new MainScreen(1).setVisible(true);
                //
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CoreExerciseLabel;
    private javax.swing.JLabel RepLabel;
    private javax.swing.JButton coreAddButton;
    private javax.swing.JList<String> coreList;
    private javax.swing.JPanel corePanel;
    private javax.swing.JLabel coreRepLabel;
    private javax.swing.JSpinner coreRepSpinner;
    private javax.swing.JScrollPane coreScrollPane;
    private javax.swing.JSpinner coreSetSpinner;
    private javax.swing.JLabel coreSetsLabel;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JSpinner dateSpinner;
    private javax.swing.JLabel exerciseLabel;
    private javax.swing.JTabbedPane exercisesTab;
    private javax.swing.JPanel exploreTab;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel logLabel;
    private javax.swing.JLabel logoIconLabel;
    private javax.swing.JButton lowerAddButton;
    private javax.swing.JPanel lowerBodyPanel;
    private javax.swing.JLabel lowerExerciseLabel;
    private javax.swing.JList<String> lowerList;
    private javax.swing.JSpinner lowerRepSpinner;
    private javax.swing.JLabel lowerRepsLabel;
    private javax.swing.JScrollPane lowerScrollPane;
    private javax.swing.JSpinner lowerSetSpinner;
    private javax.swing.JLabel lowerSetsLabel;
    private javax.swing.JTabbedPane mainTab;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameOfRoutineTextField;
    private javax.swing.JButton removeButton;
    private javax.swing.JSpinner repsSpinner;
    private javax.swing.JLabel routineLabel;
    private javax.swing.JList<String> routineList;
    private javax.swing.JScrollPane routineListScrollPane;
    private javax.swing.JComboBox<String> routineSelector;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton saveSessionButton;
    private javax.swing.JList<String> sessionExerciseList;
    private javax.swing.JPanel sessionTab;
    private javax.swing.JList<String> setsAndRepsList;
    private javax.swing.JSpinner setsSpinner;
    private javax.swing.JButton sortAlphabeticallyButton;
    private javax.swing.JLabel sortByLabek;
    private javax.swing.JButton sortDateButton;
    private javax.swing.JList<String> timelineList;
    private javax.swing.JPanel timelineTab;
    private javax.swing.JButton upperAddButton;
    private javax.swing.JList<String> upperBodyList;
    private javax.swing.JPanel upperBodyPanel;
    private javax.swing.JSpinner upperRepSpinner;
    private javax.swing.JSpinner upperSetSpinner;
    // End of variables declaration//GEN-END:variables
}
